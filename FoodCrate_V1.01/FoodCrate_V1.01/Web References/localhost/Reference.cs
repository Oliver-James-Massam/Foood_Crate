//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FoodCrate_V1._01.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_DBService", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback TotalSalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TotalRegisteredUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CashGeneratedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TotalProductsSoldOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UniqueUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddIngredientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInvoiceItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIngredientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::FoodCrate_V1._01.Properties.Settings.Default.FoodCrate_V1_01_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        public event TestConnectionCompletedEventHandler TestConnectionCompleted;
        
        /// <remarks/>
        public event ExecuteQueryCompletedEventHandler ExecuteQueryCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event TotalSalesCompletedEventHandler TotalSalesCompleted;
        
        /// <remarks/>
        public event TotalRegisteredUsersCompletedEventHandler TotalRegisteredUsersCompleted;
        
        /// <remarks/>
        public event CashGeneratedCompletedEventHandler CashGeneratedCompleted;
        
        /// <remarks/>
        public event TotalProductsSoldCompletedEventHandler TotalProductsSoldCompleted;
        
        /// <remarks/>
        public event AuthUserCompletedEventHandler AuthUserCompleted;
        
        /// <remarks/>
        public event UniqueUsernameCompletedEventHandler UniqueUsernameCompleted;
        
        /// <remarks/>
        public event CountProductsCompletedEventHandler CountProductsCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event AddRecipeCompletedEventHandler AddRecipeCompleted;
        
        /// <remarks/>
        public event AddIngredientCompletedEventHandler AddIngredientCompleted;
        
        /// <remarks/>
        public event AddInvoiceCompletedEventHandler AddInvoiceCompleted;
        
        /// <remarks/>
        public event AddInvoiceItemCompletedEventHandler AddInvoiceItemCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetProductCompletedEventHandler GetProductCompleted;
        
        /// <remarks/>
        public event GetRecipeCompletedEventHandler GetRecipeCompleted;
        
        /// <remarks/>
        public event GetIngredientCompletedEventHandler GetIngredientCompleted;
        
        /// <remarks/>
        public event GetInvoiceCompletedEventHandler GetInvoiceCompleted;
        
        /// <remarks/>
        public event GetInvoiceItemCompletedEventHandler GetInvoiceItemCompleted;
        
        /// <remarks/>
        public event GetProductByStringCompletedEventHandler GetProductByStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("GetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified) {
            this.GetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value,
                        valueSpecified}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/TestConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TestConnection() {
            object[] results = this.Invoke("TestConnection", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestConnectionAsync() {
            this.TestConnectionAsync(null);
        }
        
        /// <remarks/>
        public void TestConnectionAsync(object userState) {
            if ((this.TestConnectionOperationCompleted == null)) {
                this.TestConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestConnectionOperationCompleted);
            }
            this.InvokeAsync("TestConnection", new object[0], this.TestConnectionOperationCompleted, userState);
        }
        
        private void OnTestConnectionOperationCompleted(object arg) {
            if ((this.TestConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestConnectionCompleted(this, new TestConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/ExecuteQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public object[] ExecuteQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sqlQuery) {
            object[] results = this.Invoke("ExecuteQuery", new object[] {
                        sqlQuery});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string sqlQuery) {
            this.ExecuteQueryAsync(sqlQuery, null);
        }
        
        /// <remarks/>
        public void ExecuteQueryAsync(string sqlQuery, object userState) {
            if ((this.ExecuteQueryOperationCompleted == null)) {
                this.ExecuteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteQuery", new object[] {
                        sqlQuery}, this.ExecuteQueryOperationCompleted, userState);
        }
        
        private void OnExecuteQueryOperationCompleted(object arg) {
            if ((this.ExecuteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/ExecuteNonQuery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExecuteNonQuery([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sqlQuery, out bool ExecuteNonQueryResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ExecuteNonQueryResultSpecified) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        sqlQuery});
            ExecuteNonQueryResult = ((bool)(results[0]));
            ExecuteNonQueryResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlQuery) {
            this.ExecuteNonQueryAsync(sqlQuery, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(string sqlQuery, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        sqlQuery}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/TotalSales", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TotalSales(out long TotalSalesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool TotalSalesResultSpecified) {
            object[] results = this.Invoke("TotalSales", new object[0]);
            TotalSalesResult = ((long)(results[0]));
            TotalSalesResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void TotalSalesAsync() {
            this.TotalSalesAsync(null);
        }
        
        /// <remarks/>
        public void TotalSalesAsync(object userState) {
            if ((this.TotalSalesOperationCompleted == null)) {
                this.TotalSalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTotalSalesOperationCompleted);
            }
            this.InvokeAsync("TotalSales", new object[0], this.TotalSalesOperationCompleted, userState);
        }
        
        private void OnTotalSalesOperationCompleted(object arg) {
            if ((this.TotalSalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TotalSalesCompleted(this, new TotalSalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/TotalRegisteredUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TotalRegisteredUsers(out long TotalRegisteredUsersResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool TotalRegisteredUsersResultSpecified) {
            object[] results = this.Invoke("TotalRegisteredUsers", new object[0]);
            TotalRegisteredUsersResult = ((long)(results[0]));
            TotalRegisteredUsersResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void TotalRegisteredUsersAsync() {
            this.TotalRegisteredUsersAsync(null);
        }
        
        /// <remarks/>
        public void TotalRegisteredUsersAsync(object userState) {
            if ((this.TotalRegisteredUsersOperationCompleted == null)) {
                this.TotalRegisteredUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTotalRegisteredUsersOperationCompleted);
            }
            this.InvokeAsync("TotalRegisteredUsers", new object[0], this.TotalRegisteredUsersOperationCompleted, userState);
        }
        
        private void OnTotalRegisteredUsersOperationCompleted(object arg) {
            if ((this.TotalRegisteredUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TotalRegisteredUsersCompleted(this, new TotalRegisteredUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/CashGenerated", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CashGenerated(System.DateTime fromHere, [System.Xml.Serialization.XmlIgnoreAttribute()] bool fromHereSpecified, System.DateTime toHere, [System.Xml.Serialization.XmlIgnoreAttribute()] bool toHereSpecified, out double CashGeneratedResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CashGeneratedResultSpecified) {
            object[] results = this.Invoke("CashGenerated", new object[] {
                        fromHere,
                        fromHereSpecified,
                        toHere,
                        toHereSpecified});
            CashGeneratedResult = ((double)(results[0]));
            CashGeneratedResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CashGeneratedAsync(System.DateTime fromHere, bool fromHereSpecified, System.DateTime toHere, bool toHereSpecified) {
            this.CashGeneratedAsync(fromHere, fromHereSpecified, toHere, toHereSpecified, null);
        }
        
        /// <remarks/>
        public void CashGeneratedAsync(System.DateTime fromHere, bool fromHereSpecified, System.DateTime toHere, bool toHereSpecified, object userState) {
            if ((this.CashGeneratedOperationCompleted == null)) {
                this.CashGeneratedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCashGeneratedOperationCompleted);
            }
            this.InvokeAsync("CashGenerated", new object[] {
                        fromHere,
                        fromHereSpecified,
                        toHere,
                        toHereSpecified}, this.CashGeneratedOperationCompleted, userState);
        }
        
        private void OnCashGeneratedOperationCompleted(object arg) {
            if ((this.CashGeneratedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CashGeneratedCompleted(this, new CashGeneratedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/TotalProductsSold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TotalProductsSold(out long TotalProductsSoldResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool TotalProductsSoldResultSpecified) {
            object[] results = this.Invoke("TotalProductsSold", new object[0]);
            TotalProductsSoldResult = ((long)(results[0]));
            TotalProductsSoldResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void TotalProductsSoldAsync() {
            this.TotalProductsSoldAsync(null);
        }
        
        /// <remarks/>
        public void TotalProductsSoldAsync(object userState) {
            if ((this.TotalProductsSoldOperationCompleted == null)) {
                this.TotalProductsSoldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTotalProductsSoldOperationCompleted);
            }
            this.InvokeAsync("TotalProductsSold", new object[0], this.TotalProductsSoldOperationCompleted, userState);
        }
        
        private void OnTotalProductsSoldOperationCompleted(object arg) {
            if ((this.TotalProductsSoldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TotalProductsSoldCompleted(this, new TotalProductsSoldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AuthUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AuthUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out int AuthUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AuthUserResultSpecified) {
            object[] results = this.Invoke("AuthUser", new object[] {
                        email,
                        password});
            AuthUserResult = ((int)(results[0]));
            AuthUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AuthUserAsync(string email, string password) {
            this.AuthUserAsync(email, password, null);
        }
        
        /// <remarks/>
        public void AuthUserAsync(string email, string password, object userState) {
            if ((this.AuthUserOperationCompleted == null)) {
                this.AuthUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthUserOperationCompleted);
            }
            this.InvokeAsync("AuthUser", new object[] {
                        email,
                        password}, this.AuthUserOperationCompleted, userState);
        }
        
        private void OnAuthUserOperationCompleted(object arg) {
            if ((this.AuthUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthUserCompleted(this, new AuthUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/UniqueUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UniqueUsername([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, out bool UniqueUsernameResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UniqueUsernameResultSpecified) {
            object[] results = this.Invoke("UniqueUsername", new object[] {
                        username});
            UniqueUsernameResult = ((bool)(results[0]));
            UniqueUsernameResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UniqueUsernameAsync(string username) {
            this.UniqueUsernameAsync(username, null);
        }
        
        /// <remarks/>
        public void UniqueUsernameAsync(string username, object userState) {
            if ((this.UniqueUsernameOperationCompleted == null)) {
                this.UniqueUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUniqueUsernameOperationCompleted);
            }
            this.InvokeAsync("UniqueUsername", new object[] {
                        username}, this.UniqueUsernameOperationCompleted, userState);
        }
        
        private void OnUniqueUsernameOperationCompleted(object arg) {
            if ((this.UniqueUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UniqueUsernameCompleted(this, new UniqueUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/CountProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CountProducts(out long CountProductsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CountProductsResultSpecified) {
            object[] results = this.Invoke("CountProducts", new object[0]);
            CountProductsResult = ((long)(results[0]));
            CountProductsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CountProductsAsync() {
            this.CountProductsAsync(null);
        }
        
        /// <remarks/>
        public void CountProductsAsync(object userState) {
            if ((this.CountProductsOperationCompleted == null)) {
                this.CountProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountProductsOperationCompleted);
            }
            this.InvokeAsync("CountProducts", new object[0], this.CountProductsOperationCompleted, userState);
        }
        
        private void OnCountProductsOperationCompleted(object arg) {
            if ((this.CountProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountProductsCompleted(this, new CountProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string username, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string surname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, int type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out long AddUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddUserResultSpecified) {
            object[] results = this.Invoke("AddUser", new object[] {
                        username,
                        name,
                        surname,
                        email,
                        type,
                        typeSpecified,
                        password});
            AddUserResult = ((long)(results[0]));
            AddUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string username, string name, string surname, string email, int type, bool typeSpecified, string password) {
            this.AddUserAsync(username, name, surname, email, type, typeSpecified, password, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string username, string name, string surname, string email, int type, bool typeSpecified, string password, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        username,
                        name,
                        surname,
                        email,
                        type,
                        typeSpecified,
                        password}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddProduct([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string type, int weight, [System.Xml.Serialization.XmlIgnoreAttribute()] bool weightSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string picture, double price, [System.Xml.Serialization.XmlIgnoreAttribute()] bool priceSpecified, out long AddProductResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddProductResultSpecified) {
            object[] results = this.Invoke("AddProduct", new object[] {
                        name,
                        type,
                        weight,
                        weightSpecified,
                        description,
                        picture,
                        price,
                        priceSpecified});
            AddProductResult = ((long)(results[0]));
            AddProductResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddProductAsync(string name, string type, int weight, bool weightSpecified, string description, string picture, double price, bool priceSpecified) {
            this.AddProductAsync(name, type, weight, weightSpecified, description, picture, price, priceSpecified, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(string name, string type, int weight, bool weightSpecified, string description, string picture, double price, bool priceSpecified, object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        name,
                        type,
                        weight,
                        weightSpecified,
                        description,
                        picture,
                        price,
                        priceSpecified}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddRecipe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddRecipe([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, long creator, [System.Xml.Serialization.XmlIgnoreAttribute()] bool creatorSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string shortdesc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fulldesc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string picture, out long AddRecipeResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddRecipeResultSpecified) {
            object[] results = this.Invoke("AddRecipe", new object[] {
                        name,
                        creator,
                        creatorSpecified,
                        shortdesc,
                        fulldesc,
                        picture});
            AddRecipeResult = ((long)(results[0]));
            AddRecipeResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddRecipeAsync(string name, long creator, bool creatorSpecified, string shortdesc, string fulldesc, string picture) {
            this.AddRecipeAsync(name, creator, creatorSpecified, shortdesc, fulldesc, picture, null);
        }
        
        /// <remarks/>
        public void AddRecipeAsync(string name, long creator, bool creatorSpecified, string shortdesc, string fulldesc, string picture, object userState) {
            if ((this.AddRecipeOperationCompleted == null)) {
                this.AddRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRecipeOperationCompleted);
            }
            this.InvokeAsync("AddRecipe", new object[] {
                        name,
                        creator,
                        creatorSpecified,
                        shortdesc,
                        fulldesc,
                        picture}, this.AddRecipeOperationCompleted, userState);
        }
        
        private void OnAddRecipeOperationCompleted(object arg) {
            if ((this.AddRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRecipeCompleted(this, new AddRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddIngredient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddIngredient(long recipeID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool recipeIDSpecified, long productID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIDSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, out long AddIngredientResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddIngredientResultSpecified) {
            object[] results = this.Invoke("AddIngredient", new object[] {
                        recipeID,
                        recipeIDSpecified,
                        productID,
                        productIDSpecified,
                        quantity,
                        quantitySpecified});
            AddIngredientResult = ((long)(results[0]));
            AddIngredientResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddIngredientAsync(long recipeID, bool recipeIDSpecified, long productID, bool productIDSpecified, int quantity, bool quantitySpecified) {
            this.AddIngredientAsync(recipeID, recipeIDSpecified, productID, productIDSpecified, quantity, quantitySpecified, null);
        }
        
        /// <remarks/>
        public void AddIngredientAsync(long recipeID, bool recipeIDSpecified, long productID, bool productIDSpecified, int quantity, bool quantitySpecified, object userState) {
            if ((this.AddIngredientOperationCompleted == null)) {
                this.AddIngredientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddIngredientOperationCompleted);
            }
            this.InvokeAsync("AddIngredient", new object[] {
                        recipeID,
                        recipeIDSpecified,
                        productID,
                        productIDSpecified,
                        quantity,
                        quantitySpecified}, this.AddIngredientOperationCompleted, userState);
        }
        
        private void OnAddIngredientOperationCompleted(object arg) {
            if ((this.AddIngredientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddIngredientCompleted(this, new AddIngredientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddInvoice(long UserID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool UserIDSpecified, out long AddInvoiceResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddInvoiceResultSpecified) {
            object[] results = this.Invoke("AddInvoice", new object[] {
                        UserID,
                        UserIDSpecified});
            AddInvoiceResult = ((long)(results[0]));
            AddInvoiceResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddInvoiceAsync(long UserID, bool UserIDSpecified) {
            this.AddInvoiceAsync(UserID, UserIDSpecified, null);
        }
        
        /// <remarks/>
        public void AddInvoiceAsync(long UserID, bool UserIDSpecified, object userState) {
            if ((this.AddInvoiceOperationCompleted == null)) {
                this.AddInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInvoiceOperationCompleted);
            }
            this.InvokeAsync("AddInvoice", new object[] {
                        UserID,
                        UserIDSpecified}, this.AddInvoiceOperationCompleted, userState);
        }
        
        private void OnAddInvoiceOperationCompleted(object arg) {
            if ((this.AddInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInvoiceCompleted(this, new AddInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/AddInvoiceItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddInvoiceItem(long invoiceID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool invoiceIDSpecified, long productID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIDSpecified, int quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, int discount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool discountSpecified, double total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, out long AddInvoiceItemResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddInvoiceItemResultSpecified) {
            object[] results = this.Invoke("AddInvoiceItem", new object[] {
                        invoiceID,
                        invoiceIDSpecified,
                        productID,
                        productIDSpecified,
                        quantity,
                        quantitySpecified,
                        discount,
                        discountSpecified,
                        total,
                        totalSpecified});
            AddInvoiceItemResult = ((long)(results[0]));
            AddInvoiceItemResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddInvoiceItemAsync(long invoiceID, bool invoiceIDSpecified, long productID, bool productIDSpecified, int quantity, bool quantitySpecified, int discount, bool discountSpecified, double total, bool totalSpecified) {
            this.AddInvoiceItemAsync(invoiceID, invoiceIDSpecified, productID, productIDSpecified, quantity, quantitySpecified, discount, discountSpecified, total, totalSpecified, null);
        }
        
        /// <remarks/>
        public void AddInvoiceItemAsync(long invoiceID, bool invoiceIDSpecified, long productID, bool productIDSpecified, int quantity, bool quantitySpecified, int discount, bool discountSpecified, double total, bool totalSpecified, object userState) {
            if ((this.AddInvoiceItemOperationCompleted == null)) {
                this.AddInvoiceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInvoiceItemOperationCompleted);
            }
            this.InvokeAsync("AddInvoiceItem", new object[] {
                        invoiceID,
                        invoiceIDSpecified,
                        productID,
                        productIDSpecified,
                        quantity,
                        quantitySpecified,
                        discount,
                        discountSpecified,
                        total,
                        totalSpecified}, this.AddInvoiceItemOperationCompleted, userState);
        }
        
        private void OnAddInvoiceItemOperationCompleted(object arg) {
            if ((this.AddInvoiceItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInvoiceItemCompleted(this, new AddInvoiceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUser(long userID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool userIDSpecified) {
            object[] results = this.Invoke("GetUser", new object[] {
                        userID,
                        userIDSpecified});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(long userID, bool userIDSpecified) {
            this.GetUserAsync(userID, userIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(long userID, bool userIDSpecified, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        userID,
                        userIDSpecified}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Product GetProduct(long productID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIDSpecified) {
            object[] results = this.Invoke("GetProduct", new object[] {
                        productID,
                        productIDSpecified});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductAsync(long productID, bool productIDSpecified) {
            this.GetProductAsync(productID, productIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetProductAsync(long productID, bool productIDSpecified, object userState) {
            if ((this.GetProductOperationCompleted == null)) {
                this.GetProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductOperationCompleted);
            }
            this.InvokeAsync("GetProduct", new object[] {
                        productID,
                        productIDSpecified}, this.GetProductOperationCompleted, userState);
        }
        
        private void OnGetProductOperationCompleted(object arg) {
            if ((this.GetProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductCompleted(this, new GetProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetRecipe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Recipe GetRecipe(long recipeID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool recipeIDSpecified) {
            object[] results = this.Invoke("GetRecipe", new object[] {
                        recipeID,
                        recipeIDSpecified});
            return ((Recipe)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipeAsync(long recipeID, bool recipeIDSpecified) {
            this.GetRecipeAsync(recipeID, recipeIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetRecipeAsync(long recipeID, bool recipeIDSpecified, object userState) {
            if ((this.GetRecipeOperationCompleted == null)) {
                this.GetRecipeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipeOperationCompleted);
            }
            this.InvokeAsync("GetRecipe", new object[] {
                        recipeID,
                        recipeIDSpecified}, this.GetRecipeOperationCompleted, userState);
        }
        
        private void OnGetRecipeOperationCompleted(object arg) {
            if ((this.GetRecipeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipeCompleted(this, new GetRecipeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetIngredient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Ingredient GetIngredient(long ingredientID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool ingredientIDSpecified) {
            object[] results = this.Invoke("GetIngredient", new object[] {
                        ingredientID,
                        ingredientIDSpecified});
            return ((Ingredient)(results[0]));
        }
        
        /// <remarks/>
        public void GetIngredientAsync(long ingredientID, bool ingredientIDSpecified) {
            this.GetIngredientAsync(ingredientID, ingredientIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetIngredientAsync(long ingredientID, bool ingredientIDSpecified, object userState) {
            if ((this.GetIngredientOperationCompleted == null)) {
                this.GetIngredientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIngredientOperationCompleted);
            }
            this.InvokeAsync("GetIngredient", new object[] {
                        ingredientID,
                        ingredientIDSpecified}, this.GetIngredientOperationCompleted, userState);
        }
        
        private void OnGetIngredientOperationCompleted(object arg) {
            if ((this.GetIngredientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIngredientCompleted(this, new GetIngredientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetInvoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Invoice GetInvoice(long invoiceID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool invoiceIDSpecified) {
            object[] results = this.Invoke("GetInvoice", new object[] {
                        invoiceID,
                        invoiceIDSpecified});
            return ((Invoice)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceAsync(long invoiceID, bool invoiceIDSpecified) {
            this.GetInvoiceAsync(invoiceID, invoiceIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetInvoiceAsync(long invoiceID, bool invoiceIDSpecified, object userState) {
            if ((this.GetInvoiceOperationCompleted == null)) {
                this.GetInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceOperationCompleted);
            }
            this.InvokeAsync("GetInvoice", new object[] {
                        invoiceID,
                        invoiceIDSpecified}, this.GetInvoiceOperationCompleted, userState);
        }
        
        private void OnGetInvoiceOperationCompleted(object arg) {
            if ((this.GetInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceCompleted(this, new GetInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetInvoiceItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InvoiceItem GetInvoiceItem(long invoiceItemID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool invoiceItemIDSpecified) {
            object[] results = this.Invoke("GetInvoiceItem", new object[] {
                        invoiceItemID,
                        invoiceItemIDSpecified});
            return ((InvoiceItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceItemAsync(long invoiceItemID, bool invoiceItemIDSpecified) {
            this.GetInvoiceItemAsync(invoiceItemID, invoiceItemIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetInvoiceItemAsync(long invoiceItemID, bool invoiceItemIDSpecified, object userState) {
            if ((this.GetInvoiceItemOperationCompleted == null)) {
                this.GetInvoiceItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceItemOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceItem", new object[] {
                        invoiceItemID,
                        invoiceItemIDSpecified}, this.GetInvoiceItemOperationCompleted, userState);
        }
        
        private void OnGetInvoiceItemOperationCompleted(object arg) {
            if ((this.GetInvoiceItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceItemCompleted(this, new GetInvoiceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DBService/GetProductByString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService", IsNullable=false)]
        public Product[] GetProductByString([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NameOrType) {
            object[] results = this.Invoke("GetProductByString", new object[] {
                        NameOrType});
            return ((Product[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByStringAsync(string NameOrType) {
            this.GetProductByStringAsync(NameOrType, null);
        }
        
        /// <remarks/>
        public void GetProductByStringAsync(string NameOrType, object userState) {
            if ((this.GetProductByStringOperationCompleted == null)) {
                this.GetProductByStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByStringOperationCompleted);
            }
            this.InvokeAsync("GetProductByString", new object[] {
                        NameOrType}, this.GetProductByStringOperationCompleted, userState);
        }
        
        private void OnGetProductByStringOperationCompleted(object arg) {
            if ((this.GetProductByStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByStringCompleted(this, new GetProductByStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class InvoiceItem {
        
        private int discountField;
        
        private bool discountFieldSpecified;
        
        private long invoiceIDField;
        
        private bool invoiceIDFieldSpecified;
        
        private long productIDField;
        
        private bool productIDFieldSpecified;
        
        private int quantityField;
        
        private bool quantityFieldSpecified;
        
        private double totalField;
        
        private bool totalFieldSpecified;
        
        /// <remarks/>
        public int discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool discountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long invoiceID {
            get {
                return this.invoiceIDField;
            }
            set {
                this.invoiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool invoiceIDSpecified {
            get {
                return this.invoiceIDFieldSpecified;
            }
            set {
                this.invoiceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long productID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productIDSpecified {
            get {
                return this.productIDFieldSpecified;
            }
            set {
                this.productIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool totalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class Invoice {
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private System.DateTime dueDateField;
        
        private bool dueDateFieldSpecified;
        
        private System.DateTime fullyPaidDateField;
        
        private bool fullyPaidDateFieldSpecified;
        
        private long invoiceIDField;
        
        private bool invoiceIDFieldSpecified;
        
        private InvoiceItem[] invoiceItemsField;
        
        private string statusField;
        
        private long userIDField;
        
        private bool userIDFieldSpecified;
        
        /// <remarks/>
        public System.DateTime creationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dueDateSpecified {
            get {
                return this.dueDateFieldSpecified;
            }
            set {
                this.dueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime fullyPaidDate {
            get {
                return this.fullyPaidDateField;
            }
            set {
                this.fullyPaidDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fullyPaidDateSpecified {
            get {
                return this.fullyPaidDateFieldSpecified;
            }
            set {
                this.fullyPaidDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long invoiceID {
            get {
                return this.invoiceIDField;
            }
            set {
                this.invoiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool invoiceIDSpecified {
            get {
                return this.invoiceIDFieldSpecified;
            }
            set {
                this.invoiceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public InvoiceItem[] invoiceItems {
            get {
                return this.invoiceItemsField;
            }
            set {
                this.invoiceItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class Ingredient {
        
        private long productIDField;
        
        private bool productIDFieldSpecified;
        
        private int quantityField;
        
        private bool quantityFieldSpecified;
        
        private long recipeIDField;
        
        private bool recipeIDFieldSpecified;
        
        /// <remarks/>
        public long productID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productIDSpecified {
            get {
                return this.productIDFieldSpecified;
            }
            set {
                this.productIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool quantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long recipeID {
            get {
                return this.recipeIDField;
            }
            set {
                this.recipeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recipeIDSpecified {
            get {
                return this.recipeIDFieldSpecified;
            }
            set {
                this.recipeIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class Recipe {
        
        private long creatorField;
        
        private bool creatorFieldSpecified;
        
        private string fullDescField;
        
        private Ingredient[] ingredientsField;
        
        private string nameField;
        
        private string pictureField;
        
        private long recipeIDField;
        
        private bool recipeIDFieldSpecified;
        
        private string shortDescField;
        
        /// <remarks/>
        public long creator {
            get {
                return this.creatorField;
            }
            set {
                this.creatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool creatorSpecified {
            get {
                return this.creatorFieldSpecified;
            }
            set {
                this.creatorFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string fullDesc {
            get {
                return this.fullDescField;
            }
            set {
                this.fullDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Ingredient[] ingredients {
            get {
                return this.ingredientsField;
            }
            set {
                this.ingredientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        public long recipeID {
            get {
                return this.recipeIDField;
            }
            set {
                this.recipeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool recipeIDSpecified {
            get {
                return this.recipeIDFieldSpecified;
            }
            set {
                this.recipeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string shortDesc {
            get {
                return this.shortDescField;
            }
            set {
                this.shortDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class Product {
        
        private string descriptionField;
        
        private string nameField;
        
        private string pictureField;
        
        private double priceField;
        
        private bool priceFieldSpecified;
        
        private long productIDField;
        
        private bool productIDFieldSpecified;
        
        private string typeField;
        
        private int weightField;
        
        private bool weightFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string picture {
            get {
                return this.pictureField;
            }
            set {
                this.pictureField = value;
            }
        }
        
        /// <remarks/>
        public double price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool priceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long productID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool productIDSpecified {
            get {
                return this.productIDFieldSpecified;
            }
            set {
                this.productIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool weightSpecified {
            get {
                return this.weightFieldSpecified;
            }
            set {
                this.weightFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DatabaseService")]
    public partial class User {
        
        private string emailField;
        
        private string nameField;
        
        private string passwordField;
        
        private string surnameField;
        
        private long typeField;
        
        private bool typeFieldSpecified;
        
        private long userIDField;
        
        private bool userIDFieldSpecified;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public long type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void TestConnectionCompletedEventHandler(object sender, TestConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteQueryCompletedEventHandler(object sender, ExecuteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ExecuteNonQueryResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ExecuteNonQueryResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void TotalSalesCompletedEventHandler(object sender, TotalSalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TotalSalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TotalSalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long TotalSalesResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool TotalSalesResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void TotalRegisteredUsersCompletedEventHandler(object sender, TotalRegisteredUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TotalRegisteredUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TotalRegisteredUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long TotalRegisteredUsersResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool TotalRegisteredUsersResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CashGeneratedCompletedEventHandler(object sender, CashGeneratedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CashGeneratedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CashGeneratedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double CashGeneratedResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CashGeneratedResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void TotalProductsSoldCompletedEventHandler(object sender, TotalProductsSoldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TotalProductsSoldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TotalProductsSoldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long TotalProductsSoldResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool TotalProductsSoldResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AuthUserCompletedEventHandler(object sender, AuthUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int AuthUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AuthUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UniqueUsernameCompletedEventHandler(object sender, UniqueUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UniqueUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UniqueUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UniqueUsernameResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UniqueUsernameResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CountProductsCompletedEventHandler(object sender, CountProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long CountProductsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CountProductsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddProductCompletedEventHandler(object sender, AddProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddProductResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddProductResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddRecipeCompletedEventHandler(object sender, AddRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddRecipeResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddRecipeResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddIngredientCompletedEventHandler(object sender, AddIngredientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddIngredientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddIngredientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddIngredientResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddIngredientResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddInvoiceCompletedEventHandler(object sender, AddInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddInvoiceResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddInvoiceResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AddInvoiceItemCompletedEventHandler(object sender, AddInvoiceItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInvoiceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInvoiceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long AddInvoiceItemResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddInvoiceItemResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductCompletedEventHandler(object sender, GetProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetRecipeCompletedEventHandler(object sender, GetRecipeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Recipe Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Recipe)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetIngredientCompletedEventHandler(object sender, GetIngredientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIngredientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIngredientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Ingredient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Ingredient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetInvoiceCompletedEventHandler(object sender, GetInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Invoice Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Invoice)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetInvoiceItemCompletedEventHandler(object sender, GetInvoiceItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InvoiceItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InvoiceItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetProductByStringCompletedEventHandler(object sender, GetProductByStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Product[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Product[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591